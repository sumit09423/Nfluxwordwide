:root {
  --custom-v-progress-left: 50px;
  --custom-v-progress-item-height-width: 20px;
  --custom-v-progress-line-height: 53px;
  --custom-v-progress-line-width: 3px;
  --custom-v-progress-gap: 2px;
  --custom-blue: #0081c9;
  --custom-green: #159895;
  --custom-light-blue: #5bc0f8;
}

.main-container {
  background-color: #0c0c0c;
}

.tabing-container {
  background-color: #040404;
  box-shadow: 0px 27px 39px rgb(72 72 72 / 50%);
  border-radius: 20px;
}

/* Custom vertical progress */
.custom-v-progress {
  padding: 10px 0;
}

.custom-v-progress ul {
  list-style: none;
  padding-left: 0;
}

.custom-v-progress-item {
  position: relative;
  margin-left: var(--custom-v-progress-left);
  height: var(--custom-v-progress-item-height-width);
  line-height: var(--custom-v-progress-item-height-width);
  margin-bottom: var(--custom-v-progress-line-height);
  --custom-v-progress-border: 3px;
}

.custom-v-progress-item:last-child {
  margin-bottom: 0px;
}

.custom-v-progress-item:last-child:after {
  border-left: 0px;
}

.custom-v-progress-item span {
  margin-left: 20px;
}

.custom-v-progress-item:before {
  content: "";
  display: inline-block;
  position: absolute;
  width: var(--custom-v-progress-item-height-width);
  height: var(--custom-v-progress-item-height-width);
  left: calc(0px - var(--custom-v-progress-left));
  border-radius: 50%;
  /* background-color: #ccc; */
  border: 1px solid white;
  z-index: 1;
}
.custom-v-progress-item:after {
  content: "";
  display: inline-block;
  position: absolute;
  height: calc(
    var(--custom-v-progress-line-height) - var(--custom-v-progress-gap)
  );
  top: calc(
    var(--custom-v-progress-item-height-width) + var(--custom-v-progress-gap) /
      2
  );
  left: calc(
    0px - var(--custom-v-progress-left) +
      var(--custom-v-progress-item-height-width) / 2 -
      var(--custom-v-progress-line-width) / 2
  );
  border-left: var(--custom-v-progress-line-width) dotted #ccc;
}

.custom-v-progress-item.custom-completed:after {
  border-left: var(--custom-v-progress-line-width) solid #ccc;
  max-height: 50px;
}

.custom-v-progress-item.custom-completed:before {
  content: "âœ”";
  font-size: 11px;
  text-align: center;
  color: white;
  /* background: var(--custom-light-blue); */
  height: calc(
    var(--custom-v-progress-border) + var(--custom-v-progress-item-height-width)
  );
  width: calc(
    var(--custom-v-progress-border) + var(--custom-v-progress-item-height-width)
  );
  line-height: calc(
    var(--custom-v-progress-border) + var(--custom-v-progress-item-height-width)
  );
  left: calc(
    0px - var(--custom-v-progress-left) - var(--custom-v-progress-border) / 2
  );
  top: calc(
    0px - var(--custom-v-progress-border) + var(--custom-v-progress-border) / 2
  );
}

.custom-v-progress-item.custom-inprogress:before {
  background-color: red;
  border: 1px solid #ffffff;
  top: calc(
    0px - var(--custom-v-progress-border) + var(--custom-v-progress-border)
  );
}

/* STEP CSS */
.text-light-cust {
  color: #d3d3d3;
}

.step-subs {
  font-size: 12px;
  font-weight: 600;
  color: #d3d3d3;
}

.sub-title {
  font-size: 16px;
  font-weight: 900;
}

/* Tabbing Section */

.tabing-section-tittle p:first-child {
  font-size: 13px;
  font-weight: 900;
  color: #bca68e;
  padding: 0;
  margin: 0;
}

.tabing-section-tittle p:last-child {
  font-size: 16 px;
  font-weight: 900;
  color: #fff;
  padding: 0;
  margin: 0;
}

.tabing-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.tabing-footer button:first-child {
  font-size: 16px;
  font-weight: 900;
  text-decoration: underline;
  color: #fff;
  background: transparent;
  border: unset;
}

.tabing-footer button:last-child {
  font-size: 16px;
  font-weight: 900;
  background: red;
  text-decoration: none;
  padding: 9px 40px;
  border-radius: 10px;
  color: #fff;
}

.nav-tabs .nav-link {
  cursor: pointer;
}

.nav-tabs .nav-link.active {
  background-color: #f8f9fa;
  border-color: #dee2e6 #dee2e6 #fff;
  color: #007bff;
}

.tab-content .tab-pane {
  display: none;
}

.tab-content .tab-pane.active {
  display: block;
}

/* STEP 1 Search Input */

.step-form {
  --input-bg: #fff;
  /*  background of input */
  --padding: 1.5em;
  --rotate: 80deg;
  /*  rotation degree of input*/
  --gap: 2em;
  /*  gap of items in input */
  --icon-change-color: #15a986;
  /*  when rotating changed icon color */
  --height: 40px;
  /*  height */
  width: 200px;
  padding-inline-end: 1em;
  /*  change this for padding in the end of input */
  background: var(--input-bg);
  position: relative;
  border-radius: 4px;
}

.step-form label {
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--height);
}

.step-form input {
  width: 100%;
  padding-inline-start: calc(var(--padding) + var(--gap));
  outline: none;
  background: none;
  border: 0;
}
/* style for both icons -- search,close */
.step-form svg {
  /* display: block; */
  color: #111;
  transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: absolute;
  height: 15px;
}
/* search icon */
.icon {
  position: absolute;
  left: var(--padding);
  transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  justify-content: center;
  align-items: center;
}
/* arrow-icon*/
.swap-off {
  transform: rotate(-80deg);
  opacity: 0;
  visibility: hidden;
}
/* close button */
.close-btn {
  /* removing default bg of button */
  background: none;
  border: none;
  right: calc(var(--padding) - var(--gap));
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #111;
  padding: 0.1em;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  transition: 0.3s;
  opacity: 0;
  transform: scale(0);
  visibility: hidden;
}

.step-form input:focus ~ .icon {
  transform: rotate(var(--rotate)) scale(1.3);
}

.step-form input:focus ~ .icon .swap-off {
  opacity: 1;
  transform: rotate(-80deg);
  visibility: visible;
  color: var(--icon-change-color);
}

.step-form input:focus ~ .icon .swap-on {
  opacity: 0;
  visibility: visible;
}

.step-form input:valid ~ .icon {
  transform: scale(1.3) rotate(var(--rotate));
}

.step-form input:valid ~ .icon .swap-off {
  opacity: 1;
  visibility: visible;
  color: var(--icon-change-color);
}

.step-form input:valid ~ .icon .swap-on {
  opacity: 0;
  visibility: visible;
}

.step-form input:valid ~ .close-btn {
  opacity: 1;
  visibility: visible;
  transform: scale(1);
  transition: 0s;
}

/* Ensure the dropdown container has a maximum height and is scrollable */
.dropdown-container {
  position: relative;
}

.dropdown-menu-cust {
  position: absolute;
  top: 100%; /* Positions the dropdown below the input field */
  left: 0;
  width: 100%; /* Match the width of the input */
  max-height: 200px; /* Adjust the height as needed */
  overflow-y: auto; /* Makes the dropdown scrollable */
  z-index: 1000; /* Ensures the dropdown is above other content */
  background-color: white; /* Set background color */
  border: 1px solid #ccc; /* Add border */
  border-radius: 4px; /* Round corners */
  padding: 0px !important;
}

.dropdown-item {
  padding: 2px 10px !important; /* Adjust padding as needed */
  cursor: pointer;
  color: #000 !important;
}

.dropdown-item:hover {
  background-color: #C1AB92 !important; /* Change background color on hover */
  padding: 2px 10px !important;
  color: #000;

}

/* Plane Tab */

/* CSS for rounded checkboxes with SVG checkmark */
.rounded-checkbox {
  position: relative;
  display: flex;
  align-items: center;
  margin-bottom: 15px; /* Adjust spacing as needed */
  cursor: pointer;
  border: 2px solid #ccc; /* Default border color */
  border-radius: 10px; /* Rounded corners for the container */
  padding: 10px;
  background-color: transparent; /* Default background color */
  transition: border-color 0.3s, background-color 0.3s; /* Smooth transition */
}

.rounded-checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0; /* Hide the default checkbox */
  cursor: pointer;
}

.rounded-checkbox .checkmark {
  position: relative;
  width: 24px; /* Size of the checkbox */
  height: 24px; /* Size of the checkbox */
  border-radius: 50%; /* Make it rounded */
  border: 2px solid #ccc; /* Default border color */
  background-color: #fff; /* Background color */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 10px; /* Spacing between checkbox and text */
}

.rounded-checkbox .checkmark svg {
  display: none; /* Hide the SVG by default */
  position: absolute;
  width: 16px; /* Size of the checkmark */
  height: 16px;
  fill: #fff; /* Color of the checkmark */
}

.rounded-checkbox input[type="checkbox"]:checked ~ .checkmark {
  background-color: #fff; /* Background color when selected */
  border-color: #fff; /* Border color when selected */
}

.rounded-checkbox input[type="checkbox"]:checked ~ .checkmark svg {
  display: block; /* Show the SVG when selected */
}

.rounded-checkbox .plan-details {
  margin-left: 40px; /* Adjust based on checkmark size */
  position: relative;
}

.rounded-checkbox .plan-details h5 {
  font-size: 20px;
  font-weight: 900;
  padding: 0;
  margin: 0;
}

.plan-details .price-per-month {
  font-size: 20px;
  font-weight: 900;
  padding: 0;
  margin: 0;
}

.rounded-checkbox .plan-details p {
  font-size: 12px;
  font-weight: 900;
  /* padding: 0; */
  margin: 0;
}

.plan-details .plan-label {
  position: absolute;
  top: -22px;
  left: -60px;
  background: #c1ab92;
  padding: 1px 10px;
  font-weight: 900;
  font-size: 10px;
  border-radius: 50px;
  color: #000;
}
/* Additional styles for billing plans */
.billing-plan.selected {
  border-color: #231f19; /* Border color when selected */
  background-color: #231f19; /* Background color when selected */
  border-radius: 10px;
}

label {
  font-size: 14px;
}

.billing-cycle {
  border-bottom: 1px dashed #ffffffbd;
}

.t-M {
  font-size: 22px;
  margin-bottom: 2px;
  font-weight: 900;
}

.step-4-title {
  font-size: 22px;
  font-weight: 900;
}


/* in this i did for a globely because of the not more inputs we have  */

/* Global styles for all input fields */
input.form-control,
textarea.form-control,
select.form-control {
  background-color: transparent;
  color: white;
  border: 1px solid #ffffff42;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

input.form-control::placeholder,
textarea.form-control::placeholder {
  color: white;
  opacity: 1; /* Ensures the white color is fully applied */
}

/* Styles for focused input fields */
input.form-control:focus,
textarea.form-control:focus {
  background-color: transparent; /* Ensure background remains transparent */
  color: white; /* Ensure text color remains white */
  border-color: #C1AB92; /* Optional: Maintain white border on focus */
  outline: none; /* Remove default focus outline */
  box-shadow: none; /* Remove default focus shadow */
}
